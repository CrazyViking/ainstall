#!/bin/bash

#check network
ping archlinux.org -c 4

#prelim setup
loadkeys "us"
timedatectl set-ntp true

clear

#partitioning
while :
do
lsblk
echo "Enter drive to partition or \'done\' to continue \(ex: sda, sdb, or sdc\):"
read drivePath
case $drivepath in
      done)
       break
       ;;
      *)
       echo "Now partitioning $drivePath, remember to add a BIOS boot partition if using UEFI."
       echo "Press enter to run cfdisk:"
       cfdisk /dev/$drivePath
       echo "Do any more drives need partitioning?"
       ;;
done

clear

while :
do
echo "Did you make a boot partition? \(yes, no\)"
read bootYN
bootYN=$(echo "$bootYN" | tr '[:upper:]' '[:lower:]')
case $bootYN in
      y/yes)
        lsblk
        echo "which partiton should be the boot partition?"
        read bootPartition
        mkfs.fat -F32 /dev/$bootPartition
        echo "boot partition formatted" ;;
      n/no)
        break
        ;;
      *)
        echo "Error\: Answer not valid" ;;
        esac
done

while :
do
lsblk
echo "Enter another partition to format or \'done\' to continue \(ex: sda1, sda3, or sdb2\)"
read fullPath
if test "$fullpath" != "done"
then
echo "Which filesystem should $fullPath be formatted as? \(ex: ext3, ext4, brtrfs, or xfs\)"
read fSystem
mkfs.$fSystem /dev/$fullPath
else
break
fi
done

echo "Mounting $fullPath"
mount /dev/$fullPath /mnt

lsblk

cd /
ls --color

while :
do 
echo "Are there any additional directories to mount to its own partition? \(If so type the directory name, if not write \'no\'.\)"
read dir
case $dir in
      no)
      break
      ;;
      *)
      lsblk
      echo "What partition should $dir be mounted to?"
      read partition
      mount /$dir /dev/$partition
      ;;
      esac
done

clear

echo "Installing base and base-devel"
pacstrap /mnt base base-devel

echo "Generating fstab:"
genfstab -U -p /mnt >> /mnt/etc/fstab

echo "Review the fstab and add any partitons that you've created in addition to the root partition."
lsblk -f
read -p "Press enter to continue:"
nano /mnt/etc/fstab

clear

echo "Chrooting into installation\:"
echo "Run aconfig inside the chroot environment to finish installation."

cp ainstall /mnt
cp aconfig /mnt

sleep 1s
arch-chroot /mnt
